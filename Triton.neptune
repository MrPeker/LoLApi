<?php
//#!/usr/bin/php
//#!/usr/bin/env php

require 'triton/TritonConsoleInterface.php';
require 'triton/triton.php';
require 'libs/connect/connect.php';

use Libs\Connect\Connect;

function readlineTriton($prompt = null)
{
  if($prompt)
  {
    echo $prompt;
  }
  $fp = fopen('php://stdin','r');
  $line = rtrim(fgets($fp, 1024));
  return $line;
}
if($argv[1] == 'create:tableFile')
{
  $database = ucfirst($argv[2]);
  $table = ucfirst($argv[3]);
  if(!file_exists('database/databases/' . $database . '/' . $table . 'Table.php'))
  {
    $tableFileContent = '<?php
namespace Database\\Databases\\' . $database . ';

class '.$table.'Table
{
  public function table($table)
  {
    /*
     * This is your Triton codes! After the Triton codes you wrote here,
     * you will only have one line of console code, then the codes in the database!
     * Detailed usage: http://neptunefw.org/doc/orm/triton-orm
    */
    return $table;
  }
}';

    file_put_contents('database/databases/' . $database . '/' . $table . 'Table.php', $tableFileContent);
    if(file_exists('database/databases/' . $database . '/' . $table . 'Table.php'))
    {
      if(file_get_contents('database/databases/' . $database . '/' . $table . 'Table.php', $tableFileContent) == $tableFileContent)
      {
        echo 'database/databases/' . $database . '/' . $table . 'Table.php Table file created.';
      }
      else
      {
        echo 'Table file created. However, a problem was encountered.';
      }
    }
    else
    {
      echo 'Table file could not be created.';
    }
  }
  else
  {
    echo 'database/databases/' . $database . '/' . $table . 'Table.php This table file already exists. Action canceled.';
  }
}
else if($argv[1] == 'create:table')
{
  $database = ucfirst($argv[2]);
  $table = ucfirst($argv[3]);
  $connectionSettings = file_get_contents('database/databases/' . $database . '/connection.ntconfig');

  eval('$connectionSettings = ' . $connectionSettings);
  if(file_exists('database/databases/' . $database . '/lock.nt'))
  {
    unlink('database/databases/' . $database . '/lock.nt');
  }

  $tConsole = new TritonConsoleInterface($database, $connectionSettings["host"], $connectionSettings["user"], $connectionSettings['pass']);

  $value = __DIR__ . '/Database/Databases/' . $database . '/' . $table . 'Table.php';
  $tConsole->createTable($value, $database);
}
else if($argv[1] == 'rename:table')
{
  $database = $argv[2];
  $tableOldName = $argv[3];
  $tableNewName = $argv[4];

  rename('database/databases/' . $database . '/' . ucfirst($tableOldName) . 'Table.php', 'database/databases/' . $database . '/' . ucfirst($tableNewName) . 'Table.php');

  $tableFileNewContent = preg_replace('(class ' . ucfirst($tableOldName) . 'Table)', 'class ' . ucfirst($tableNewName) . 'Table', file_get_contents('database/databases/'. $database . '/' . ucfirst($tableNewName) . 'Table.php'));

  file_put_contents('database/databases/'. $database . '/' . ucfirst($tableNewName) . 'Table.php', $tableFileNewContent);

  $connectionSettings = file_get_contents('database/databases/'. $database . '/connection.ntconfig');

  eval('$connectionSettings = ' . $connectionSettings);

  try
  {
    $pdoConnection = new PDO('mysql:host=' . $connectionSettings['host'] . ';dbname=' . $database, $connectionSettings['user'], $connectionSettings['pass']);
  }
  catch (PDOException $e)
  {
    die('No connection to the database! We think the problem is yours. If it\'s us, please contact us! More information: ' . $e->getMessage());
  }

  $pdoConnection->exec("RENAME TABLE ".$tableOldName." TO ".$tableNewName." ");
}
else if($argv[1] == 'rename:tableColumn')
{
  $database = ucfirst($argv[2]);
  $table = ucfirst($argv[3]);
  $columnOldName = $argv[4];
  $columnNewName = $argv[5];
  $connectionSettings = file_get_contents('database/databases/' . $database . '/connection.ntconfig');
  eval('$connectionSettings = ' . $connectionSettings);
  try
  {
    $pdoConnection = new PDO('mysql:host=' . $connectionSettings['host'] . ';dbname=' . $database, $connectionSettings['user'], $connectionSettings['pass']);
  }
  catch (PDOException $e)
  {
    die('No connection to the database! We think the problem is yours. If it\'s us, please contact us! More information: ' . $e->getMessage());
  }
  $showColumns = $pdoConnection->prepare('SHOW COLUMNS FROM ' . $table);
  $showColumns->execute();
  $columns = $showColumns->fetchAll();
  foreach ($columns as $column)
  {
    if(array_search($columnOldName, $column))
    {
      $query = $pdoConnection->exec('ALTER TABLE ' . $table . ' CHANGE ' . $columnOldName . ' ' . $columnNewName . ' ' . $column['Type'] . ' ' . $column['Extra']);
      $tConsole = new TritonConsoleInterface($database, $connectionSettings['host'], $connectionSettings['user'], $connectionSettings['pass']);
      $tConsole->createTableFile($table, $database);
      echo 'Created files.';
    }
  }
}
else if($argv[1] == 'delete:tableColumn')
{
  $database = ucfirst($argv[2]);
  $table = ucfirst($argv[3]);
  $columnName = $argv[4];
  $connectionSettings = file_get_contents('database/databases/' . $database . '/connection.ntconfig');
  eval('$connectionSettings = ' .$connectionSettings);
  try {
    $pdoConnection = new PDO("mysql:host=" . $connectionSettings["host"] . ";dbname=" . $database, $connectionSettings['user'], $connectionSettings['pass']);
  }
  catch (PDOException $e)
  {
    die('No connection to the database! We think the problem is yours. If it\'s us, please contact us! More information: ' . $e->getMessage());
  }
  $query = $pdoConnection->exec('ALTER TABLE ' . $table . ' DROP COLUMN ' . $columnName  . ' ');
  $tConsole = new TritonConsoleInterface($database, $connectionSettings['host'], $connectionSettings['user'], $connectionSettings['pass']);
  $tConsole->createTableFile($table, $database);
  echo 'Created files.';
}
else if($argv[1] == 'create:tables')
{
  $database = $argv[2];
  $connectionSettings = file_get_contents('database/databases/' . $database . '/connection.ntconfig');
  eval('$connectionSettings = ' .$connectionSettings);
  try
  {
    $pdoConnection = new PDO("mysql:host=" . $connectionSettings["host"] . ";dbname=" . $database, $connectionSettings['user'], $connectionSettings['pass']);
  }
  catch (PDOException $e)
  {
    die('No connection to the database! We think the problem is yours. If it\'s us, please contact us! More information: ' . $e->getMessage());
  }
  $tConsole = new TritonConsoleInterface($database, $connectionSettings['host'], $connectionSettings['user'], $connectionSettings['pass']);
  $tConsole->createTableFiles($database);
}
else if($argv[1] == 'delete:table')
{
  $database = ucfirst($argv[2]);
  $table = ucfirst($argv[3]);

  $line = readlineTriton('Do yo want delete table? (Y/N)');
  if($line == 'Y')
  {
    unlink('database/databases/' . $database . '/' . $table  . 'Table.php');
    $connectionSettings = file_get_contents('database/databases/' . $database . '/connection.ntconfig');

    eval('$connectionSettings = ' . $connectionSettings);
    try
    {
      $pdoConnection = new PDO("mysql:host=" . $connectionSettings["host"] . ";dbname=" . $database, $connectionSettings['user'], $connectionSettings['pass']);
    }
    catch (PDOException $e)
    {
      die('No connection to the database! We think the problem is yours. If it\'s us, please contact us! More information: ' . $e->getMessage());
    }
    $pdoConnection->exec("DROP TABLE ". $table );
  }
  else if($line == 'N')
  {
      echo 'Process canceled.';
  }
}
else if($argv[1] == 'clean:table')
{
  $database = ucfirst($argv[2]);
  $table = ucfirst($argv[3]);
  $line = readlineTriton('Are you sure you want to empty the chart? (Y/N)');
  if($line == 'Y')
  {
    $connectionSettings = file_get_contents('database/databases/' . $database . '/connection.ntconfig');
    eval('$connectionSettings = ' . $connectionSettings);
    try
    {
      $pdoConnection = new PDO('mysql:host=' . $connectionSettings['host'] . ';dbname=' . $database, $connectionSettings['user'], $connectionSettings['pass']);
    }
    catch (PDOException $e)
    {
      die('No connection to the database! We think the problem is yours. If it\'s us, please contact us! More information: ' . $e->getMessage());
    }
    $pdoConnection->exec('TRUNCATE ' . $table );
    echo 'The query was run.';
  }
  else if($line == 'N')
  {
    echo 'Process canceled.';
  }
}
else
{
    echo '"'. $argv[1] .'" isn\'t recognized.';
}
